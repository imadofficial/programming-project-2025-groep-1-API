openapi: '3.1.1'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

security:
  - bearerAuth: []


info:
  title: API Title
  version: '1.0'

tags:
  - name: Bedrijven
  - name: Studenten

servers:
  - url: http://localhost:3001
    description: Dev Server

paths:
  /bedrijven:
    description: List of companies
    post:
      tags:
        - Bedrijven
      description: Create a new company
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
    get:
      tags:
        - Bedrijven
      responses:
        '200':
          description: OK
          content: 
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string

  /bedrijven/{id}:
    description: Get a specific company by ID
    get:
      tags:
        - Bedrijven
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK

  /studenten:
    description: List of students
    post:
      tags:
        - Studenten
      description: Create a new student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
    get:
      tags:
        - Studenten
      responses:
        '200':
          description: OK
          content: 
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string


  /studenten/{id}:
    description: Get a specific student by ID
    get:
      tags:
        - Studenten
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string